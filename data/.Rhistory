pacman::p_load(tidyverse,
# oddpub,  install using the github repo
rtransparent,
metareadr,
europepmc,
readxl)
ISSNs <- read_excel("C:/Users/ahmad/Downloads/Dental Journals ISSNs.csv")
ISSNs <- read.csv("C:/Users/ahmad/Downloads/Dental Journals ISSNs.csv")
ISSNs <- read_excel("C:/Users/ahmad/Downloads/Dental Journals ISSNs.xlsx")
ISSNs <- ISSNs %>% mutate(search.term = sapply(`Primary ISSN`, paste0, "ISSN:"))
head(ISSNs)
View(ISSNs)
ISSNs <- ISSNs %>% mutate(search.term = paste0("ISSN:", `Primary ISSN`))
ISSNsQuery <- paste(ISSNs$search.term, collapse = " OR ")
ISSNs <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vTcoDSEDhtzrYe8u8hkLC9OQ9fZHaQn8cBNZt_7k-qnqtDFP0OCxXPj9aM38D0umO2stdox41C1eZAi/pub?gid=0&single=true&output=csv")
glimpse(ISSNs)
ISSNs <- ISSNs %>% mutate(search.term = paste0("ISSN:", `Primary ISSN`))
ISSNsQuery <- paste(ISSNs$search.term, collapse = " OR ")
db = epmc_search(
query = paste0(
'(',
ISSNsQuery,
')',
'AND (SRC:"MED") AND (LANG:"eng" OR LANG:"en" OR LANG:"us") AND (OPEN_ACCESS:y) AND (FIRST_PDATE:[2016-01-01 TO 2021-11-08])'
),
limit = 100000,
output = "parsed"
)
db <- epmc_search(
query = paste0(
'(',
ISSNsQuery,
')',
'AND (SRC:"MED") AND (LANG:"eng" OR LANG:"en" OR LANG:"us") AND (OPEN_ACCESS:y) AND (FIRST_PDATE:[2016-01-01 TO 2021-11-08])'
),
limit = 100000,
output = "parsed"
)
db <- epmc_search(
query = paste0(
'(',
ISSNsQuery,
')',
'AND (SRC:"MED") AND (LANG:"eng" OR LANG:"en" OR LANG:"us") AND (OPEN_ACCESS:y) AND (FIRST_PDATE:[2016-01-01 TO 2021-12-19])'
),
limit = 100000,
output = "parsed"
)
set.seed(0)
db <- epmc_search(
query = paste0(
'(',
ISSNsQuery,
')',
'AND (SRC:"MED") AND (LANG:"eng" OR LANG:"en" OR LANG:"us") AND (OPEN_ACCESS:y) AND (FIRST_PDATE:[2016-01-01 TO 2021-12-19])'
),
limit = 100000,
output = "parsed"
)
set.seed(100)
dbnonoa <- epmc_search(query = paste0('(', ISSNsQuery, ')', 'AND (SRC:"MED") AND (LANG:"eng" OR LANG:"en" OR LANG:"us") AND (OPEN_ACCESS:n) AND (FIRST_PDATE:[2016-01-01 TO 2021-11-08])'),limit=100000,output="parsed")
write_rds(dbnonoa,"dbnonoa.rds")
randomsample <- dbnonoa[sample(nrow(dbnonoa), 500),]
write_rds(randomsample,"randomsample.rds")
dbnonoa <- read_rds("dbnonoa.rds")
randomsample <- read_rds("randomsample.rds")
dbnonoa <- epmc_search(query = paste0('(', ISSNsQuery, ')', 'AND (SRC:"MED") AND (LANG:"eng" OR LANG:"en" OR LANG:"us") AND (OPEN_ACCESS:n) AND (FIRST_PDATE:[2016-01-01 TO 2021-12-20])'),limit=100000,output="parsed")
dbnonoa <- epmc_search(query = paste0('(', ISSNsQuery, ')', 'AND (SRC:"MED") AND (LANG:"eng" OR LANG:"en" OR LANG:"us") AND (OPEN_ACCESS:n) AND (FIRST_PDATE:[2016-01-01 TO 2021-12-20])'),limit=100000,output="parsed")
dbnonoa <- epmc_search(query = paste0('(', ISSNsQuery, ')', 'AND (SRC:"MED") AND (LANG:"eng" OR LANG:"en" OR LANG:"us") AND (FIRST_PDATE:[2021-10-01 TO 2021-12-20])'),limit=100000,output="parsed")
View(dbnonoa)
db <- epmc_search(
query = paste0(
'(',
ISSNsQuery,
')',
'AND (SRC:"MED") AND (LANG:"eng" OR LANG:"en" OR LANG:"us") AND (OPEN_ACCESS:y) AND (FIRST_PDATE:[2016-01-01 TO 2021-12-20])'
),
output = "parsed"
)
db <- epmc_search(
query = paste0(
'(',
ISSNsQuery,
')',
'AND (SRC:"MED")
AND (LANG:"eng" OR LANG:"en" OR LANG:"us")
AND (FIRST_PDATE:[2016-01-01 TO 2021-12-20])'
),
limit = 1000000,
output = "parsed"
)
head(db)
db$pmcid_ <-
gsub("PMC", "", as.character(db$pmcid))
dir.create(file.path(dirname(getwd()), "pmc"))
setwd("pmc")
setwd("pmc")
ls()
getwd()
dir.create(file.path(dirname(getwd()), "pmc"))
getwd()
setwd("pmc")
dir.create("C:/Users/ahmad/Downloads/", "pmc")
setwd("pmc")
setwd("C:/Users/ahmad/Downloads/pmc")
install.packages(c('tinytex', 'rmarkdown'))
tinytex::install_tinytex()
install.packages(c("tinytex", "rmarkdown"))
install.packages(c('tinytex', 'rmarkdown'))
install.packages(c("tinytex", "rmarkdown"))
tinytex::install_tinytex()
install.packages(c("tinytex", "rmarkdown"))
install.packages(c("tinytex", "rmarkdown"))
install.packages(c("tinytex", "rmarkdown"))
install.packages(c("tinytex", "rmarkdown"))
tinytex::install_tinytex()
install.packages(c("tinytex", "rmarkdown"))
install.packages(c("tinytex", "rmarkdown"))
tinytex::install_tinytex()
tinytex:::is_tinytex()
tinytex::tlmgr_install("babel-portuges")
if (!require("remotes"))
install.packages("remotes", repos = "https://cran.rstudio.org")
remotes::install_github("rstudio/bookdown")
remotes::install_github("ismayc/thesisdown")
version
pacman::p_load(tidyverse,
oddpub,
rtransparent,
metareadr,
europepmc,
readxl)
folder = gsub('"', "", gsub("\\\\", "/", readline("Please paste the \"output\" directory path with quotations here:")))
pdfs = gsub('"', "", gsub("\\\\", "/", readline("Please paste the path for \"PDFs\" directory with quotations here:")))
oddpub::pdf_convert(pdfs, folder, 10)
pacman::p_load(tidyverse,
rtransparent,
metareadr,
europepmc,
ggplot2)
ISSNs <- read.csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vTcoDSEDhtzrYe8u8hkLC9OQ9fZHaQn8cBNZt_7k-qnqtDFP0OCxXPj9aM38D0umO2stdox41C1eZAi/pub?gid=0&single=true&output=csv")
ISSNs <- ISSNs %>% mutate(search.term = paste0("ISSN:", `Primary ISSN`))
ISSNs <- ISSNs %>% mutate(search.term = paste0("ISSN:", Primary.ISSN))
ISSNsQuery <- paste(ISSNs$search.term,
collapse = " OR ")
db <- epmc_search(
query = paste0(
'(',
ISSNsQuery,
')',
'AND (SRC:"MED")
AND (LANG:"eng" OR LANG:"en" OR LANG:"us")
AND (FIRST_PDATE:[TO 2021-12-31])
AND (OPEN_ACCESS:y)'
),
limit = 1000000,
output = "parsed"
)
?epmc_search
db <- epmc_search(
query = paste0(
'(',
ISSNsQuery,
')',
'AND (SRC:"MED")
AND (LANG:"eng" OR LANG:"en" OR LANG:"us")
AND (FIRST_PDATE:[1900-01-01 TO 2021-12-31])
AND (OPEN_ACCESS:y)'
),
limit = 1000000,
output = "parsed"
)
db <- epmc_search(
query = paste0(
'AND (SRC:"MED")
AND (LANG:"eng" OR LANG:"en" OR LANG:"us")
AND (FIRST_PDATE:[1900-01-01 TO 2021-12-31])
AND (OPEN_ACCESS:y)'
),
limit = 10000000
)
pacman::p_load(tidyverse,
rtransparent,
metareadr,
europepmc,
ggplot2)
db <- epmc_search(
+     query = paste0(
+         'AND (SRC:"MED")
+     AND (LANG:"eng" OR LANG:"en" OR LANG:"us")
+     AND (FIRST_PDATE:[1900-01-01 TO 2021-12-31])
+     AND (OPEN_ACCESS:y)'
+     ),
+     limit = 10000000
+ )
db <- epmc_search(query = paste0('AND (SRC:"MED") AND (LANG:"eng" OR LANG:"en" OR LANG:"us") AND (FIRST_PDATE:[1900-01-01 TO 2021-12-31]) AND (OPEN_ACCESS:y)' ), limit = 10000000)
db <- epmc_search(query = paste0((SRC:"MED") AND (LANG:"eng" OR LANG:"en" OR LANG:"us") AND (FIRST_PDATE:[1900-01-01 TO 2021-12-31]) AND (OPEN_ACCESS:y)' ), limit = 10000000)
db <- epmc_search(query = '(SRC:"MED") AND (LANG:"eng" OR LANG:"en" OR LANG:"us") AND (FIRST_PDATE:[1900-01-01 TO 2021-12-31]) AND (OPEN_ACCESS:y)' ), limit = 10000000)
db <- epmc_search(query = '(SRC:"MED") AND (LANG:"eng" OR LANG:"en" OR LANG:"us") AND (FIRST_PDATE:[1900-01-01 TO 2021-12-31]) AND (OPEN_ACCESS:y)', limit = 10000000)
db <- epmc_search(
query =
'AND (SRC:"MED")
AND (LANG:"eng" OR LANG:"en" OR LANG:"us")
AND (FIRST_PDATE:[1900-01-01 TO 2021-12-31])
AND (OPEN_ACCESS:y)',
limit = 1000000
)
db <- epmc_search(
query =
'(SRC:"MED")
AND (LANG:"eng" OR LANG:"en" OR LANG:"us")
AND (FIRST_PDATE:[1900-01-01 TO 2021-12-31])
AND (OPEN_ACCESS:y)',
limit = 10000000
)
db <- epmc_search(query = '(SRC:"MED") AND (LANG:"eng" OR LANG:"en" OR LANG:"us") AND (FIRST_PDATE:[1900-01-01 TO 2021-12-31]) AND (OPEN_ACCESS:y)', limit = 10000000)
db_1999 <- epmc_search(query = '(SRC:"MED") AND (LANG:"eng" OR LANG:"en" OR LANG:"us") AND (FIRST_PDATE:[1900-01-01 TO 1999-12-31]) AND (OPEN_ACCESS:y)', limit = 10000000)
db_1999 <- epmc_search(query = '(SRC:"MED") AND (LANG:"eng" OR LANG:"en" OR LANG:"us") AND (FIRST_PDATE:[1900-01-01 TO 1999-12-31]) AND (OPEN_ACCESS:y)')
db_1999 <- epmc_search(query = '(SRC:"MED") AND (LANG:"eng" OR LANG:"en" OR LANG:"us") AND (FIRST_PDATE:[1900-01-01 TO 1999-12-31]) AND (OPEN_ACCESS:y)', limit = 1000000)
db_1990 <- epmc_search(query = '(SRC:"MED") AND (LANG:"eng" OR LANG:"en" OR LANG:"us") AND (FIRST_PDATE:[1900-01-01 TO 1990-12-31]) AND (OPEN_ACCESS:y)', limit = 1000000)
pacman::p_load(tidyverse,
oddpub,
rtransparent,
metareadr,
europepmc,
readxl)
ISSNs <- read.csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vTcoDSEDhtzrYe8u8hkLC9OQ9fZHaQn8cBNZt_7k-qnqtDFP0OCxXPj9aM38D0umO2stdox41C1eZAi/pub?gid=0&single=true&output=csv")
ISSNs <- ISSNs %>% mutate(search.term = paste0("ISSN:", Primary.ISSN))
ISSNsQuery <- paste(ISSNs$search.term,
collapse = " OR ")
db <- epmc_search(
query = paste0(
'(',
ISSNsQuery,
')',
'AND ("results not shown" OR "data not shown")
AND (SRC:"MED")
AND (LANG:"eng" OR LANG:"en" OR LANG:"us")
AND (FIRST_PDATE:[1900-01-01 TO 2021-12-31])'
),
limit = 1000000,
output = "parsed"
)
db <- epmc_search(
db <- epmc_search(
query = paste0(
'(',
ISSNsQuery,
')',
'AND ("results not shown" OR "data not shown")
AND (SRC:"MED")
AND (LANG:"eng" OR LANG:"en" OR LANG:"us")
AND (FIRST_PDATE:[1900-01-01 TO 2021-12-31])
AND ((IN_EPMC:y) OR (OPEN_ACCESS:y))'
),
limit = 1000000,
output = "parsed"
)
query = paste0(
'(',
load("C:/Users/ahmad/Google Drive/GBD QCI/Orofacial clefts/rmarkdown_qci_clefts_analysis.Rmd")
knitr::opts_knit$set(root.dir = 'C:/Users/ahmad/Google Drive/Meta-Research in Dentistry/FAIRness of COVID-19 data/data/')
pacman::p_load(dplyr,
ggplot2,
knitr)
opendata <- read.csv("covid_transparency_opendata.csv")
setwd('C:/Users/ahmad/Google Drive/Meta-Research in Dentistry/FAIRness of COVID-19 data/data/')
jif <- read.csv("jif_2020.csv")
names(opendata)
names(jif)
db1 <- left_join(opendata, jif, by.x = "journalIssn", by.y = "ISSN")
db1 <- left_join(opendata, jif, by = c("journalIssn" = "ISSN"))
db1 <- merge(opendata, jif, by.x = "journalIssn", by.y = "ISSN")
kable(data.frame(hits_all = 92752,
hits_oa = nrow(opendata),
oa_percentage = round((nrow(opendata)/92752)*100, 2)))
nrow(opendata) - nrow(jif)
nrow(opendata) - nrow(jif)
nrow(jif)
db_jif <- merge(opendata, jif, by.x = "journalIssn", by.y = "ISSN")
nrow(opendata) - nrow(db_jif)
opendata %>%
group_by(is_coi_pred) %>%
summarise(Mean = round(mean(X2020.JIF, na.rm = T),3),
SD = round(sd(X2020.JIF, na.rm = T),4),
Median = median(X2020.JIF, na.rm = T),
IQR = IQR(X2020.JIF, na.rm = T))
db_jif %>%
group_by(is_coi_pred) %>%
summarise(Mean = round(mean(X2020.JIF, na.rm = T),3),
SD = round(sd(X2020.JIF, na.rm = T),4),
Median = median(X2020.JIF, na.rm = T),
IQR = IQR(X2020.JIF, na.rm = T))
View(db_jif)
db_jif %>%
group_by(is_fund_pred) %>%
summarise(Mean = round(mean(X2020.JIF, na.rm = T), 3),
SD = round(sd(X2020.JIF, na.rm = T), 4),
Median = median(X2020.JIF, na.rm = T),
IQR = IQR(X2020.JIF, na.rm = T))
mean(db_jif$X2020.JIF, na.rm = T)
mean(as.numeric(db_jif$X2020.JIF), na.rm = T)
db_jif <- as.numeric(db_jif$X2020.JIF)
db_jif %>%
group_by(is_coi_pred) %>%
summarise(Mean = round(mean(X2020.JIF, na.rm = T),3),
SD = round(sd(X2020.JIF, na.rm = T),4),
Median = median(X2020.JIF, na.rm = T),
IQR = IQR(X2020.JIF, na.rm = T))
db_jif <- merge(opendata, jif, by.x = "journalIssn", by.y = "ISSN")
db_jif$X2020.JIF <- as.numeric(db_jif$X2020.JIF)
db_jif %>%
group_by(is_coi_pred) %>%
summarise(Mean = round(mean(X2020.JIF, na.rm = T),3),
SD = round(sd(X2020.JIF, na.rm = T),4),
Median = median(X2020.JIF, na.rm = T),
IQR = IQR(X2020.JIF, na.rm = T))
with(db_jif, shapiro.test(X2020.JIF[is_coi_pred == TRUE]))
wilcox.test(X2020.JIF~is_coi_pred, data = db_jif, exact = FALSE)
wilcox.test(X2020.JIF~is_fund_pred, data = db_jif, exact = FALSE)
db_jif %>%
group_by(is_fund_pred) %>%
summarise(Mean = round(mean(X2020.JIF, na.rm = T), 3),
SD = round(sd(X2020.JIF, na.rm = T), 4),
Median = median(X2020.JIF, na.rm = T),
IQR = IQR(X2020.JIF, na.rm = T))
db_jif %>%
group_by(is_register_pred) %>%
summarise(Mean = round(mean(X2020.JIF, na.rm = T), 3),
SD = round(sd(X2020.JIF, na.rm = T), 4),
Median = median(X2020.JIF, na.rm = T),
IQR = IQR(X2020.JIF, na.rm = T))
wilcox.test(db_jif~is_register_pred, data = opendata, exact = FALSE)
wilcox.test(X2020.JIF~is_register_pred, data = db_jif, exact = FALSE)
with(db_jif, shapiro.test(sample(X2020.JIF[is_coi_pred == TRUE], 5000)))
set.seed(10)
with(db_jif, shapiro.test(sample(X2020.JIF[is_coi_pred == TRUE], 5000)))
with(db_jif, shapiro.test(sample(X2020.JIF[is_coi_pred == FALSE], 5000)))
with(db_jif, shapiro.test(sample(X2020.JIF[is_coi_pred == FALSE], 5000)))
with(db_jif, shapiro.test(X2020.JIF[is_coi_pred == FALSE]))
with(db_jif, shapiro.test(X2020.JIF[is_fund_pred == TRUE]))
with(db_jif, shapiro.test(sample(X2020.JIF[is_fund_pred == TRUE], 5000)))
with(db_jif, shapiro.test(X2020.JIF[is_fund_pred == FALSE]))
with(db_jif, shapiro.test(X2020.JIF[is_register_pred == TRUE]))
with(db_jif, shapiro.test(X2020.JIF[is_register_pred == FALSE]))
with(db_jif, shapiro.test(sample(X2020.JIF[is_register_pred == FALSE], 5000)))
kable(db_jif %>%
group_by(is_coi_pred) %>%
summarise(Mean = round(mean(X2020.JIF, na.rm = T),3),
SD = round(sd(X2020.JIF, na.rm = T),4),
Median = median(X2020.JIF, na.rm = T),
IQR = IQR(X2020.JIF, na.rm = T)))
rm(list = ls())
knitr::opts_knit$set(root.dir = 'C:/Users/ahmad/Google Drive/GBD QCI/Orofacial clefts/Orofacial clefts - data/')
pacman::p_load(dplyr,
ggplot2,
readstata13)
main_data <- read.dta13("main_data.dta")
iso3 <- read.dta13("ISO3.dta")
main_data %>%
select(location_name, year, sex_name, pca_score) %>%
filter(location_name == "Global",
year == c(1990, 2019)) %>%
mutate(across(4, round, 1))
pacman::p_load(dplyr,
ggplot2,
knitr,
readstata13)
kable(main_data %>%
select(location_name, year, sex_name, pca_score) %>%
filter(location_name == "Global",
year == c(1990, 2019)) %>%
mutate(across(4, round, 1)))
main_data %>%
filter(location_name == "Global") %>%
ggplot(aes(year, pca_score, group = sex_name, color = sex_name)) +
geom_line(size = 1, alpha = 0.8) +
geom_point(size = 2) +
scale_color_brewer(name = "Sex", palette = "Set1") +
xlab("Year") +
ylab("Quality of Care Index (QCI)")
qci_trend <- merge(main_data, iso3, by = "location_name") %>%
select(location_name, year, sex_name, pca_score, type, iso3_countries) %>%
filter(year %in% c(1990, 2019)) %>%
spread(year, pca_score) %>%
mutate(year_ratio = `2019`/`1990`,
compare = ifelse(`2019` > `1990`, "higher", "lower")) %>%
mutate(year_ratio_cat = ifelse(year_ratio < 0.95, "lower",
ifelse(year_ratio > 1.05, "higher", "equal")))
library(tidyr)
qci_trend <- merge(main_data, iso3, by = "location_name") %>%
select(location_name, year, sex_name, pca_score, type, iso3_countries) %>%
filter(year %in% c(1990, 2019)) %>%
spread(year, pca_score) %>%
mutate(year_ratio = `2019`/`1990`,
compare = ifelse(`2019` > `1990`, "higher", "lower")) %>%
mutate(year_ratio_cat = ifelse(year_ratio < 0.95, "lower",
ifelse(year_ratio > 1.05, "higher", "equal")))
gdr <- merge(main_data, iso3, by = "location_name") %>%
select(location_name, year, sex_name, pca_score, type, iso3_countries) %>%
filter(sex_name %in% c("Male", "Female")) %>%
spread(sex_name, pca_score) %>%
mutate(gdr = Female/Male) %>%
mutate(gdr_cat = ifelse(gdr < 0.95, "low",
ifelse(gdr > 1.05, "high", "equal"))
)
kable(merge(gdr %>%
filter(year == 1990 & type == "Country") %>%
group_by(gdr_cat) %>%
summarise(n = n()),
gdr %>%
filter(year == 2019 & type == "Country") %>%
group_by(gdr_cat) %>%
summarise(n = n()),
by = "gdr_cat") %>% setNames(c("gdr_cat", "1990", "2019")))
